name: Firmware release

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ~/.platformio/.cache
          key: ${{ runner.os }}-pio

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
            python-version: '3.11'

      - name: Install PlatformIO Core
        run: pip install --upgrade platformio

      - name: Extract build version
        id: get_version
        uses: battila7/get-version-action@v2

      - name: Run PlatformIO
        env:
          VERSION: ${{ steps.get_version.outputs.version-without-v }}
        run: pio run

      - name: Prepare Release Assets 1
        run: |
          sudo apt install rename
      
      #git update-index --chmod=+x prepare_deploy.sh
      - name: Prepare Release Assets 2
        run: |
             ./prepare_deploy.sh
      - name: Get upload url
        id: release-id
        run: |
          RELEASE_ID=$(jq --raw-output '.release.id' $GITHUB_EVENT_PATH)
          echo "::set-output name=upload_url::https://uploads.github.com/repos/${GITHUB_REPOSITORY}/releases/${RELEASE_ID}/assets{?name,label}"
      - name: Upload Release Assets
        uses: bgpat/release-asset-action@03b0c30db1c4031ce3474740b0e4275cd7e126a3
        with:
          pattern: "toDeploy/*"
          github-token: ${{ secrets.GITHUB_TOKEN }}
          release-url: ${{ steps.release-id.outputs.upload_url }}
          allow-overwrite: true

#      - name: Archive production artifacts
#        uses: actions/upload-artifact@v2
#        with:
#          name: firmware
#          path: .pio/build/**/mobiflight*.bin
#
#      - name: Release
#        uses: softprops/action-gh-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          files: .pio/build/**/firmware*.bin
